<?xml version="1.0" encoding="utf-8" ?>
<app:BasePage
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:app="clr-namespace:petaverse.frontend.mauiapp"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:triggers="clr-namespace:petaverse.frontend.mauiapp.Triggers"
    xmlns:animations="clr-namespace:petaverse.frontend.mauiapp.Animations"
    xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls"
    
    Shell.NavBarIsVisible="False"
    ios:Page.UseSafeArea="False"
    
    x:Class="petaverse.frontend.mauiapp.WalkthroughPage"
    x:DataType="app:WalkthroughPageViewModel"
    SizeChanged="BasePage_SizeChanged">
    <app:BasePage.Resources>
        <animations:FadeToAnimation x:Key="FadeToAnimation"
                                    Target="{x:Reference SwipeInstructionLabel}"
                                    Duration="1000"
                                    Opacity="0"/>

        <animations:FadeInAnimation x:Key="FadeInAnimation"
                                    Target="{x:Reference SwipeInstructionLabel}"
                                    Duration="1000"/>

        <animations:FadeOutAnimation x:Key="FadeOutAnimation"
                                     Target="{x:Reference BackButton}"
                                     Duration="1000"/>

        <FontImageSource x:Key="BackIcon"
                         Color="{x:Static app:AppColors.White}"
                         FontFamily="{x:Static app:FontNames.FluentSystemIconsRegular}"
                         Glyph="{Static app:FluentUIIcon.Ic_fluent_arrow_left_48_regular}"/>

        <DataTemplate x:Key="WalkthroughCarouselTemplate"
                      x:DataType="app:WalkthroughItemModel">
            <VerticalStackLayout Spacing="{x:Static app:Dimensions.SpacingSm}">
                <VerticalStackLayout.Resources>
                    <animations:FadeInAnimation x:Key="FadeInAnimation"
                                                Target="{x:Reference TitleLabel, SubTitleLabel}"
                                                Duration="1000"/>
                </VerticalStackLayout.Resources>
                <ContentView VerticalOptions="FillAndExpand">
                    <Image x:Name="WalkthroughImage" 
                           Aspect="AspectFill" 
                           WidthRequest="400"
                           HeightRequest="460"
                           Source="{Binding Image}"
                           BackgroundColor="Transparent"/>
                </ContentView>
                <!--<VerticalStackLayout MaximumWidthRequest="350"
                                     HorizontalOptions="Center"
                                     VerticalOptions="FillAndExpand"
                                     Spacing="{x:Static app:Dimensions.SpacingMd}">-->
                <Label x:Name="TitleLabel"
                        FontAttributes="Bold"
                        Text="{Binding Title}"
                        HorizontalTextAlignment="Center"
                        Style="{x:Static app:Styles.Heading3}"
                        TextColor="{AppThemeBinding Light={x:Static app:AppColors.Black}, Dark={x:Static app:AppColors.White}}"
                        Margin="{app:EdgeInsets Right={x:Static app:Dimensions.SpacingSm}, Left={x:Static app:Dimensions.SpacingSm}}">
                    <Label.Triggers>
                        <EventTrigger Event="Loaded">
                            <triggers:BeginAnimation Animation="{StaticResource FadeInAnimation}"/>
                        </EventTrigger>
                    </Label.Triggers>
                </Label>
                <Label x:Name="SubTitleLabel"
                       Text="{Binding Subtitle}"
                       HorizontalTextAlignment="Center"
                       Style="{x:Static app:Styles.SubHeading2Semi}"
                       Margin="{app:EdgeInsets Horizontal={x:Static app:Dimensions.SpacingLg}}"
                       TextColor="{AppThemeBinding Light={x:Static app:AppColors.Black}, Dark={x:Static app:AppColors.White}}">
                    <Label.Triggers>
                        <EventTrigger Event="Loaded">
                            <triggers:BeginAnimation Animation="{StaticResource FadeInAnimation}"/>
                        </EventTrigger>
                    </Label.Triggers>
                </Label>
                <!--</VerticalStackLayout>-->
            </VerticalStackLayout>
        </DataTemplate>

        <DataTemplate x:Key="CarouselTabletItemTemplate"
                      x:DataType="app:WalkthroughItemModel">
            <VerticalStackLayout>
                <Image Source="{x:Binding Image}"
                       Aspect="AspectFill"
                       VerticalOptions="Fill"
                       HorizontalOptions="Fill"/>
                <VerticalStackLayout VerticalOptions="End"
                                     HorizontalOptions="Center">
                    <Label x:Name="TitleLabel"
                            FontAttributes="Bold"
                            Text="{Binding Title}"
                            HorizontalTextAlignment="Center"
                            Style="{x:Static app:Styles.Heading2}"
                            TextColor="{AppThemeBinding Light={x:Static app:AppColors.Black}, Dark={x:Static app:AppColors.White}}"
                            Margin="{app:EdgeInsets Right={x:Static app:Dimensions.SpacingSm}, Left={x:Static app:Dimensions.SpacingSm}}">
                        <Label.Triggers>
                            <EventTrigger Event="Loaded">
                                <triggers:BeginAnimation Animation="{StaticResource FadeInAnimation}"/>
                            </EventTrigger>
                        </Label.Triggers>
                    </Label>
                    <Label x:Name="SubTitleLabel"
                             Text="{Binding Subtitle}"
                             MaximumWidthRequest="500"
                             HorizontalTextAlignment="Center"
                             Style="{x:Static app:Styles.SubHeading1Semi}"
                             Margin="{app:EdgeInsets Horizontal={x:Static app:Dimensions.SpacingLg}}"
                             TextColor="{AppThemeBinding Light={x:Static app:AppColors.Black}, Dark={x:Static app:AppColors.White}}">
                        <Label.Triggers>
                            <EventTrigger Event="Loaded">
                                <triggers:BeginAnimation Animation="{StaticResource FadeInAnimation}"/>
                            </EventTrigger>
                        </Label.Triggers>
                    </Label>
                </VerticalStackLayout>
            </VerticalStackLayout>
        </DataTemplate>
        
        
    </app:BasePage.Resources>

    <ScrollView>
        <!--<Grid toolkit:StateContainer.CurrentState="{x:Binding DeviceState}">
            <toolkit:StateContainer.StateViews>
                <Label toolkit:StateView.StateKey="Tablet" Text="Success!" />
                <Label toolkit:StateView.StateKey="Desktop" Text="Default Content" />
            </toolkit:StateContainer.StateViews>
        </Grid>-->



        <Grid toolkit:StateContainer.CurrentState="{x:Binding DeviceState}">
            <toolkit:StateContainer.StateViews>
                <!--Phone-->
                <Grid MinimumHeightRequest="820"
                      VerticalOptions="Fill"
                      HorizontalOptions="Fill"
                      toolkit:StateView.StateKey="Phone">
                    <CarouselView Loop="False"
                                  IsSwipeEnabled="True"
                                  IndicatorView="indicatorView"
                                  ItemsSource="{Binding Items}"
                                  VerticalOptions="FillAndExpand"
                                  HorizontalOptions="FillAndExpand"
                                  Position="{Binding ItemPosition}"
                                  ItemTemplate="{StaticResource WalkthroughCarouselTemplate}">
                        <CarouselView.Triggers>
                            <EventTrigger Event="PositionChanged">
                                <triggers:BeginAnimation Animation="{StaticResource FadeToAnimation}"/>
                            </EventTrigger>
                        </CarouselView.Triggers>
                    </CarouselView>
                    <VerticalStackLayout VerticalOptions="End"
                                         Padding="{app:EdgeInsets
                                                    Top={x:Static app:Dimensions.SpacingLg},
                                                    Bottom={x:Static app:Dimensions.SpacingMd}}">
                        <IndicatorView x:Name="indicatorView"
                                       Margin="{app:EdgeInsets Bottom={x:Static app:Dimensions.SpacingMd}}"
                                       HorizontalOptions="Center" 
                                       SelectedIndicatorColor="{x:StaticResource Primary}"
                                       IndicatorColor="{x:Static app:AppColors.Grey20}"/>

                        <Button Text="Bắt đầu"
                                HorizontalOptions="Center"
                                BackgroundColor="{x:StaticResource Primary}"
                                Command="{Binding StartCommand}"
                                IsVisible="{Binding AllowsToStart}"
                                Style="{x:Static app:Styles.ButtonAccent}"/>
                        <Button Text="Bỏ qua"
                    HorizontalOptions="Center"
                    Command="{Binding SkipCommand}" 
                    Style="{x:Static app:Styles.ButtonFlat}"
                    Margin="{app:EdgeInsets Top={x:Static app:Dimensions.SpacingSm}}">
                            <Button.Triggers>
                                <DataTrigger
                        TargetType="Button"
                        Binding="{Binding AllowsToSkip}"
                        Value="True">
                                    <Setter Property="Opacity" Value="1" />
                                </DataTrigger>
                                <DataTrigger
                        TargetType="Button"
                        Binding="{Binding AllowsToSkip}"
                        Value="False">
                                    <Setter Property="Opacity" Value="0.01" />
                                </DataTrigger>
                            </Button.Triggers>
                        </Button>
                    </VerticalStackLayout>

                    <Button x:Name="BackButton"
                        WidthRequest="47"
                        HeightRequest="47"
                        VerticalOptions="Start"
                        HorizontalOptions="Start"
                        BackgroundColor="#53b1fd"
                        Command="{Binding MoveCommand}"
                        IsVisible="{Binding AllowsToGoback}"
                        ImageSource="{StaticResource BackIcon}"
                        Margin="{app:EdgeInsets
                                    Top={x:Static app:Dimensions.SpacingLg},
                                    Left={x:Static app:Dimensions.SpacingMd}}">
                        <Button.CommandParameter>
                            <x:Boolean>True</x:Boolean>
                        </Button.CommandParameter>
                    </Button>

                    <Label x:Name="SwipeInstructionLabel"
               Opacity="0"
               VerticalOptions="Start"
               HorizontalOptions="End"
               MaximumWidthRequest="300"
               HorizontalTextAlignment="End"
               Style="{x:Static app:Styles.Heading2}"
               TextColor="{x:Static app:AppColors.Black}"
               Text="Vuốt phải để khám phá các tính năng nổi bật"
               Margin="{app:EdgeInsets Top={x:Static app:Dimensions.SpacingLg},
                                       Right={x:Static app:Dimensions.SpacingMd}}">
                        <Label.Triggers>
                            <EventTrigger Event="Loaded">
                                <triggers:BeginAnimation Animation="{StaticResource FadeInAnimation}"/>
                            </EventTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>
                
                <!--Tablet-->
                <Grid toolkit:StateView.StateKey="Tablet">
                    <VerticalStackLayout>
                        <CarouselView Loop="False"
                                  IsSwipeEnabled="True"
                                  IndicatorView="indicatorViewTablet"
                                  ItemsSource="{Binding Items}"
                                  VerticalOptions="FillAndExpand"
                                  HorizontalOptions="FillAndExpand"
                                  Position="{Binding ItemPosition}"
                                  ItemTemplate="{x:StaticResource CarouselTabletItemTemplate}">
                            <CarouselView.Triggers>
                                <EventTrigger Event="PositionChanged">
                                    <triggers:BeginAnimation Animation="{StaticResource FadeToAnimation}"/>
                                </EventTrigger>
                            </CarouselView.Triggers>
                        </CarouselView>

                        <IndicatorView x:Name="indicatorViewTablet"
                                     Margin="{app:EdgeInsets Bottom={x:Static app:Dimensions.SpacingMd}}"
                                     HorizontalOptions="Center" 
                                     SelectedIndicatorColor="{x:StaticResource Primary}"
                                     IndicatorColor="{x:Static app:AppColors.Grey20}"/>

                        <Button Text="Bắt đầu"
                                HorizontalOptions="Center"
                                BackgroundColor="{x:StaticResource Primary}"
                                Command="{Binding StartCommand}"
                                IsVisible="{Binding AllowsToStart}"
                                Style="{x:Static app:Styles.ButtonAccent}"/>
                        <Button Text="Bỏ qua"
                                HorizontalOptions="Center"
                                Command="{Binding SkipCommand}" 
                                Style="{x:Static app:Styles.ButtonFlat}"
                                Margin="{app:EdgeInsets Top={x:Static app:Dimensions.SpacingSm}}">
                            <Button.Triggers>
                                <DataTrigger
                                            TargetType="Button"
                                            Binding="{Binding AllowsToSkip}"
                                            Value="True">
                                    <Setter Property="Opacity" Value="1" />
                                </DataTrigger>
                                <DataTrigger
                                            TargetType="Button"
                                            Binding="{Binding AllowsToSkip}"
                                            Value="False">
                                    <Setter Property="Opacity" Value="0.01" />
                                </DataTrigger>
                            </Button.Triggers>
                        </Button>
                    </VerticalStackLayout>

                    <Button x:Name="BackButtonTablet"
                        WidthRequest="47"
                        HeightRequest="47"
                        VerticalOptions="Start"
                        HorizontalOptions="Start"
                        BackgroundColor="#53b1fd"
                        Command="{Binding MoveCommand}"
                        IsVisible="{Binding AllowsToGoback}"
                        ImageSource="{StaticResource BackIcon}"
                        Margin="{app:EdgeInsets
                                    Top={x:Static app:Dimensions.SpacingLg},
                                    Left={x:Static app:Dimensions.SpacingMd}}">
                        <Button.CommandParameter>
                            <x:Boolean>True</x:Boolean>
                        </Button.CommandParameter>
                    </Button>

                    <Label x:Name="SwipeInstructionLabelTablet"
                             Opacity="0"
                             VerticalOptions="Start"
                             HorizontalOptions="End"
                             MaximumWidthRequest="300"
                             HorizontalTextAlignment="End"
                             Style="{x:Static app:Styles.Heading2}"
                             TextColor="{x:Static app:AppColors.Black}"
                             Text="Vuốt phải để khám phá các tính năng nổi bật"
                             Margin="{app:EdgeInsets Top={x:Static app:Dimensions.SpacingLg},
                                                       Right={x:Static app:Dimensions.SpacingMd}}">
                        <Label.Triggers>
                            <EventTrigger Event="Loaded">
                                <triggers:BeginAnimation Animation="{StaticResource FadeInAnimation}"/>
                            </EventTrigger>
                        </Label.Triggers>
                    </Label>
                </Grid>

                <Label toolkit:StateView.StateKey="Desktop"
                       Text="Layout not yet defined"/>
            </toolkit:StateContainer.StateViews>
        </Grid>
    </ScrollView>
</app:BasePage>